
PUSH
	
ORG 0x89088
jumpToHack(StatScreen_HelpBoxIdle)

POP

StatScreen_HelpBoxIdleDirectionHandler:

	//WORD buttonInputToCheck 
	//POIN routine (WORD 0 if no further conditions besides the button being pressed) 
	//POIN instructionsIfTrue|1

	//Button: A
	#ifdef USE_HELP_TEXT_MULTIPLE_PAGES
		WORD 0x1
		POIN StatScreen_IsButtonAAllowed
		POIN StatScreen_HelpBoxIdle_ChangeHelpText|1
	#endif

	//Button: Direction Up
	WORD 0x40
	WORD 0
	POIN StatScreen_HelpBoxIdle_GoUp|1

	//Button: Direction Down
	WORD 0x80
	WORD 0
	POIN StatScreen_HelpBoxIdle_GoDown|1

	//Button: Direction Left
	WORD 0x20
	WORD 0
	POIN StatScreen_HelpBoxIdle_GoLeft|1

	//Button: Direction Right
	WORD 0x10
	#ifdef USE_WEAPON_RANK_MOVE_RIGHT_CHECK
		#ifdef ONLY_SHOW_USED_RANKS
			POIN WeaponRankMoveRightCheck
		#else
			WORD 0
		#endif
	#else
		WORD 0
	#endif
	POIN StatScreen_HelpBoxIdle_GoRight|1

	//Buttons: B, R
	WORD 0x102
	WORD 0
	POIN StatScreen_HelpBoxIdle_BreakProcLoop|1

	//end of list
	WORD 0


#include "asm/StatScreen_HelpBoxIdle.lyn.event"
ALIGN 4

#ifdef USE_HELP_TEXT_MULTIPLE_PAGES
	#include "asm/StatScreen_IsButtonAAllowed.lyn.event"
	ALIGN 4
#endif

#ifdef USE_WEAPON_RANK_MOVE_RIGHT_CHECK
	#ifdef ONLY_SHOW_USED_RANKS
	
		WeaponRankDescLooperPointer:
		#ifdef USE_HELP_TEXT_WEAPON_RANK
			POIN CheckIfMoreRanks|1
		#else
			POIN WeaponDescLooper|1
		#endif
		
		#include "asm/WeaponRankMoveRightCheck.lyn.event"
		ALIGN 4
		
	#endif
#endif
