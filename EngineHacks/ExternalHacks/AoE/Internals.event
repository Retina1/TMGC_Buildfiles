
#define AoE_EntrySizeDef 16 // 16 bytes per AoE table entry 
#define AoE_TableTerminator "WORD 0 0 0 0 0 0 0 0"
#define AoE_RamAddressDef "0x0203F101" // Also used by combat art menu. 

// Most users should not need to edit this file. 

ALIGN 4
AoE_SkillTester: 
#ifdef SKILLSYSTEM_SKILL_TESTER
	POIN SkillTester
#else; WORD 0; #endif 


ALIGN 4
AoE_Pokemblem_MoveTester: 
#ifdef Pokemblem_MoveTester
	POIN MoveTester
#else; WORD 0; #endif 


#include	"TilePalettes/_1D9DC_Loop6C_MoveLimitView.lyn.event"

PUSH 

ORG $1DA98 
jumpToHack(PurpleMovementSquares|1)

ORG	$1D9DC
jumpToHack(_1D9DC_Loop6C_MoveLimitView)

POP 




ALIGN 4
RangeSquarePurplePalette:
#incbin "TilePalettes/RangeSquaresPurplePalette.dmp"


ALIGN 4
PurpleMovementSquares:
#include "TilePalettes/PurpleMovementSquares.lyn.event"



#include "FreeSelect/FreeSelect6C.event"
#include "_6C_Basic_Cases/_Staff6C_BasicCases.event"
#ifndef rfStaffTargeting
	#define rfStaffTargeting(routine, rangefunc, procpoin) "SHORT 0x1C28 0x1C22 0x4903 0x4B04; BL(routine); SHORT 0xBC30 0xBC01 0x4700 0x0; POIN (rangefunc|1) procpoin"
#endif 


#include "AoE.lyn.event"
#include "CreateRangeMapFromTemplateByStanH.lyn.event" 
#include "CreateMoveMapFromTemplate.lyn.event" 


#include "AoE_RangeTemplates.event"
#include "AoE_CallSubmenuEffect.lyn.event"
#include "AoE_DamageEffect.lyn.event" 



/*
Vanilla animations:
(Grabbed from Febuilder)

ASMC 0x8080475 // Play Demon King sealing Effect
ASMC 0x807FCC1 // Play Demon King summon Effect (floor)
ASMC 0x807F879 // Play Demon King summon Effect 
ASMX 0x8085BFD // Torch item Effect

ASMC 0x5DB19 //Elfire 

ASMC 0x5D065 //Fire Breath


*/ 
/*
ThunderEvent:
//STARTFADE
//COLORFADE_FADE [0,32] 0xFF00 128 128 128
//STAL 0x10
SET_ACTIVE 0
ASMC 0x801d6fd //PlayerPhase_ReloadGameGfx - just in case they didn't cleanup their gfx 
 
STARTFADE
COLORFADE_FADE [0,32] 0xFF00 128 128 128
STAL 0x10

//SVAL 0xB 0x00040003
ASMC EventStartAnime|1
//ENDFADE 


NoFade 
ENDA 
*/


Call_AoE_ExternalAnimationEvent:
ASMC AoE_ExternalAnimation 
NoFade 
ENDA 

Clear_sBEvent:
ASMC 0x801d6fd //PlayerPhase_ReloadGameGfx - just in case they didn't cleanup their gfx 
SVAL rB 0 
NoFade 
ENDA 

AoE_MainEvent:
ASMC AoE_StartBlockingProc
NoFade 
ENDA 




ALIGN 4
AoE_MainProc:
PROC_YIELD // Buffer.
PROC_SET_NAME(AoE_MainProcName)
PROC_SLEEP(0)
PROC_LOOP_ROUTINE(AoE_PauseForAnimation)
PROC_CALL_ROUTINE(AoE_GenericEffect)
PROC_END


AoE_MainProcName:
String("AoE_MainProc") ; BYTE 0
ALIGN 4




ALIGN 4
AoE_EntrySize:
BYTE AoE_EntrySizeDef

ALIGN 4
AoE_RamAddress:
WORD AoE_RamAddressDef

ALIGN 4
AoESubmenuDef:
BYTE 0 //x coord ? 
BYTE 3 //y coord
BYTE 8 //width
BYTE 0 //height
WORD 0 //Unknown
POIN AoEMenuCommandsList //menu commands ptr
WORD 0 //OnInit
WORD 0 //OnEnd
WORD 0 //Unknown
POIN 0x22861 //On B Press
POIN 0x4f521 //On R Press
POIN 0x4f459 //On Help Box


ALIGN 4
AoE_FreeSelect:
POIN AoE_fsStart | 1          // On create
POIN Staff6C_fsDelete | 1           // On delete
POIN InvalidCursorByRangeMap_2 | 1    // On cursor movement
POIN TargetTileConfirm_2 | 1          // On A press
POIN AoE_FS6C_ButtonPress_Cancel | 1    // On B press
WORD 0                              // On R press
CommandDefEnd

ALIGN 4
AoE_HealFreeSelect: // identical except green tiles 
POIN AoE_HealfsStart | 1          // On create
POIN Staff6C_fsDelete | 1           // On delete
POIN InvalidCursorByRangeMap_2 | 1    // On cursor movement
POIN TargetTileConfirm_2 | 1          // On A press
POIN AoE_FS6C_ButtonPress_Cancel | 1    // On B press
WORD 0                              // On R press
CommandDefEnd

	//range square colors for the macro
#ifndef rsMove 
	#define rsMove	0x1
	#define rsRed	0x2
	#define rsGreen	0x4
	#define rsBlue	0x10 // identical to move ? 
	#define movementRed 0x20 
#endif 
	#define movementPurple 0x40 


ALIGN 4
AoE_fsStart:
StaffTargetInit(UM_AoEHelp, rsRed, Staff6C_fsStart) 

AoE_HealfsStart:
StaffTargetInit(UM_AoEHealHelp, rsGreen, Staff6C_fsStart) 

ALIGN 4
InvalidCursorByRangeMap_2:
#incbin "InvalidCursorByRangeMap.dmp"
POIN OptionalAdditionalRangeSelectionCheck

ALIGN 4
OptionalAdditionalRangeSelectionCheck:
#incbin "OptionalAdditionalRangeSelectionCheck.dmp"

ALIGN 4
TargetTileConfirm_2:
#include "TargetTileConfirm.lyn.event"
POIN OptionalAdditionalRangeSelectionCheck

