  /*

  stat screen R menu is at 8a00b38
  find by breaking on key press while R menu open

  Each entry is 6 words
  Pointer 1 (up)
  POinter 2 (down)
  POinter 3 (left)
  Pointer 4 (right)
  x,y,Txtid
  Zero
  (Optional Pointer for alternate text routine)

  ST_Name:
  WORD 0
  POIN ST_Class
  WORD 0
  POIN ST_Luck
  BYTE 0x18
  BYTE 0x50
  SHORT 0
  WORD 0

  */

  //#include "EAstdlib.event"
  
  #include "RTextGetters/RTextGetters.event"

  #define RMenu(up,down,left,right,xcoord,ycoord,TID) "POIN up down left right;BYTE xcoord ycoord; SHORT TID; WORD 0 0;"
  #define RMenu(up,down,left,right,xcoord,ycoord,TID,Getter) "POIN up down left right; BYTE xcoord ycoord; SHORT TID; WORD 0; POIN Getter|1"
  #define RMenu(up,down,left,right,xcoord,ycoord,SlotID,Looper,Getter) "POIN up down left right; BYTE xcoord ycoord; SHORT SlotID; POIN Looper|1 Getter|1"
  #define RMenu_Cond(up,down,left,right,xcoord,ycoord,TID,Conditional) "POIN up down left right; BYTE xcoord ycoord; SHORT TID; POIN Conditional|1 0"
  
  //If USE_HELP_TEXT_CAP is defined, use this definition
  #define CapRMenu(up,down,left,right,xcoord,ycoord,SlotID) "POIN up down left right; BYTE xcoord ycoord; SHORT SlotID; POIN StatCapLooper|1 StatCapGetter|1"
  
  //If USE_HELP_TEXT_CALC is defined, use this definition
  #define CalcRMenu(up,down,left,right,xcoord,ycoord,SlotID) "POIN up down left right; BYTE xcoord ycoord; SHORT SlotID; POIN CalcLooper|1 CalcGetter|1"

  #define NameDescGetter 0x88bd5
  #define ClassDescGetter 0x88c01
  #define ConditionGetter 0x88a2d
  #define StrMagGetter 0x88b09
  #define ItemDescGetter 0x88A01
  #define ItemDescLooper 0x88B41
  #define WRankGetter 0x88B95
  #define SupportsConditional 0x88C15
 

  #ifdef QOL_STAT_SCREEN_BALLISTA
    
    PUSH
        
        //If USE_HELP_TEXT_MULTIPLE_PAGES is defined and replaceWithHack macro has PROTECT, comment this replaceWithHack out

		//ORG 0x88A00
		//replaceWithHack(ItemMenuRtextGetter)
        
        ORG 0x88B40
        replaceWithHack(ItemMenuRtextLooper)
        
    POP
    
    ALIGN 4
    #include "asm/ItemMenuRtext_BallistaFix.lyn.event"

#endif  // QOL_STAT_SCREEN_BALLISTA


  PUSH
  
    ORG $889D8
      POIN RText_Page1
    ORG 0x889E0
      POIN RText_Page2
    ORG 0x889F8
	  POIN RText_Page3
	
	ORG $889d0
      SHORT $e010 //Temporary r-text fix to prevent freezing

    ORG $889f2  
      SHORT $BD30
      BL(RText_Page4_ladder) //this has to be in bl range somewhere
	  
	
	
  POP



/*  === PAGE 1 ===  */


  #ifndef USE_STRMAG_SPLIT

  ALIGN 4
  RText_Page1:

  #ifdef PRESS_SELECT_TO_VIEW_GROWTHS
    PersonalDataRText:
      RMenu(0,ST_Str,ST_Name,0,0x76,0x4,PersonalDataDesc1)
  #else
    PersonalDataRText:
      RMenu(0,ST_Str,ST_Name,0,0x76,0x4,PersonalDataDesc2)
  #endif


  ST_Name:
    RMenu(0,ST_Class,0,ST_Luck,0x18,0x50,0x0,NameDescGetter)

  ST_Class:
    RMenu(ST_Name,ST_Level,0,ST_Res,0x6,0x68,0x6E8,ClassDescGetter)

  //If USE_HELP_TEXT_CAP is defined, add Cap in front of CapRMenu (CapRMenu) and replace text id with slot id (Use id from Cap/Cap.event). Repeat for all pages in use.
  ST_Level:
    //RMenu(ST_Class,ST_HP,0,ST_Exp,0x6,0x78,0x542)
    CapRMenu(ST_Class,ST_HP,0,ST_Exp,0x6,0x78,10)

  ST_Exp:
    RMenu(ST_Class,ST_HP,ST_Level,ST_Mov,0x26,0x78,0x543)

  
  ST_HP:
    //RMenu(ST_Level,0,0,ST_Con,0x6,0x88,0x544)
    CapRMenu(ST_Level,0,0,ST_Con,0x6,0x88,0)

  ST_Str:
    //RMenu(PersonalDataRText,ST_Skl,ST_Name,ST_Aid,0x66,0x18,0x546,StrMagGetter)
    CapRMenu(PersonalDataRText,ST_Skl,ST_Name,ST_Aid,0x66,0x18,1)

  ST_Skl:
    //RMenu(ST_Str,ST_Spd,ST_Name,ST_Trv,0x66,0x28,0x548)
    CapRMenu(ST_Str,ST_Spd,ST_Name,ST_Trv,0x66,0x28,3)

  ST_Spd:
    //RMenu(ST_Skl,ST_Luck,ST_Name,ST_Affin,0x66,0x38,0x549)
    CapRMenu(ST_Skl,ST_Luck,ST_Name,ST_Affin,0x66,0x38,4)

  ST_Luck:
    //RMenu(ST_Spd,ST_Def,ST_Name,ST_Cond,0x66,0x48,0x54a)
	CapRMenu(ST_Spd,ST_Def,ST_Name,ST_Cond,0x66,0x48,5)

  ST_Def:
    //RMenu(ST_Luck,ST_Res,ST_Class,ST_Talk,0x66,0x58,0x54b)
    CapRMenu(ST_Luck,ST_Res,ST_Class,ST_Talk,0x66,0x58,6)

  ST_Res:
    //RMenu(ST_Def,ST_Mov,ST_Exp,ST_Skills,0x66,0x68,0x54c)
    CapRMenu(ST_Def,ST_Mov,ST_Exp,ST_Skills,0x66,0x68,7)

  ST_Mov:
    //RMenu(ST_Res,ST_Con,ST_Exp,ST_Skill1,0x66,0x78,0x54d,MovHPDescGetter)
    CapRMenu(ST_Res,ST_Con,ST_Exp,ST_Skill1,0x66,0x78,8)

  ST_Con:
    //RMenu(ST_Mov,0,ST_HP,ST_Skill4,0x66,0x88,0x54e)
    CapRMenu(ST_Mov,0,ST_HP,ST_Skill4,0x66,0x88,9)

  ST_Aid:
    RMenu(PersonalDataRText,ST_Trv,ST_Str,0,0xa6,0x18,0x54F)
  
  ST_Trv:
    RMenu(ST_Aid,ST_Affin,ST_Skl,0,0xa6,0x28,0x550)

  ST_Affin:
    #ifdef LEADERSHIP_STARS
      RMenu(ST_Trv,ST_Cond,ST_Spd,0,0xa6,0x38,LeadRText)
    #endif //LEADERSHIP_STARS
	#ifdef BIORHYTHM
	   RMenu(ST_Trv,ST_Cond,ST_Spd,0,0xa6,0x38,SS_BiorhythmRText)
	#endif //BIORHYTHM
   //If USE_HELP_TEXT_AFFINITY is defined, add AffinityGetter after text id 
	   //RMenu(ST_Trv,ST_Cond,ST_Spd,0,0xa6,0x38,0x551)
	   RMenu(ST_Trv,ST_Cond,ST_Spd,0,0xa6,0x38,0x551,AffinityGetter)

  ST_Cond:
    RMenu(ST_Affin,ST_Talk,ST_Luck,0,0xA6,0x48,0x552,ConditionGetter)

  ST_Talk:
    RMenu(ST_Cond,ST_Skills,ST_Def,0,0xA6,0x58,SS_TalkRText)

  ST_Skills:
    RMenu(ST_Talk,ST_Skill1,ST_Res,0,0xA6,0x68,SS_SkillsRText)

  //If USE_HELP_TEXT_SKILL is defined, replace SkillDescGetter+X with NewSkillDescGetter (no +X)
  ST_Skill1:
    //RMenu(ST_Skills,ST_Skill4,ST_Mov,ST_Skill2,0xa6,0x78,0,RTextLoop,SkillDescGetter)
    RMenu(ST_Skills,ST_Skill4,ST_Mov,ST_Skill2,0xa6,0x78,0,RTextLoop,NewSkillDescGetter)

  ST_Skill2:
    //RMenu(ST_Skills,ST_Skill5,ST_Skill1,ST_Skill3,0xbe,0x78,1,RTextLoop,SkillDescGetter+4)
    RMenu(ST_Skills,ST_Skill5,ST_Skill1,ST_Skill3,0xbe,0x78,1,RTextLoop,NewSkillDescGetter)

  ST_Skill3:
    //RMenu(ST_Skills,ST_Skill6,ST_Skill2,0,0xd6,0x78,2,RTextLoop,SkillDescGetter+8)
    RMenu(ST_Skills,ST_Skill6,ST_Skill2,0,0xd6,0x78,2,RTextLoop,NewSkillDescGetter)

  ST_Skill4:
    //RMenu(ST_Skill1,0,ST_Con,ST_Skill5,0xa6,0x88,3,RTextLoop,SkillDescGetter+12)
    RMenu(ST_Skill1,0,ST_Con,ST_Skill5,0xa6,0x88,3,RTextLoop,NewSkillDescGetter)

  ST_Skill5:
    //RMenu(ST_Skill2,0,ST_Skill4,ST_Skill6,0xbe,0x88,4,RTextLoop,SkillDescGetter+16)
    RMenu(ST_Skill2,0,ST_Skill4,ST_Skill6,0xbe,0x88,4,RTextLoop,NewSkillDescGetter)

  ST_Skill6:
    //RMenu(ST_Skill3,0,ST_Skill5,0,0xd6,0x88,5,RTextLoop,SkillDescGetter+20)
    RMenu(ST_Skill3,0,ST_Skill5,0,0xd6,0x88,5,RTextLoop,NewSkillDescGetter)
  

#else // USE_STRMAG_SPLIT
  
  
  ALIGN 4
  RText_Page1:

 #ifdef PRESS_SELECT_TO_VIEW_GROWTHS
    PersonalDataRText:
    RMenu(0,ST_Str,0,0,0x76,0x4,PersonalDataDesc1)
  #else
    PersonalDataRText:
    RMenu(0,ST_Str,0,0,0x76,0x4,PersonalDataDesc2)
  #endif


  ST_Name:
    RMenu(0,ST_Class,0,ST_Luck,0x18,0x50,0x0,NameDescGetter)

  ST_Class:
    RMenu(ST_Name,ST_Level,0,ST_Def,0x6,0x68,0x6E8,ClassDescGetter)

  ST_Level:
    //RMenu(ST_Class,ST_HP,0,ST_Exp,0x6,0x78,0x542)
    CapRMenu(ST_Class,ST_HP,0,ST_Exp,0x6,0x78,10)

  ST_Exp:
    RMenu(ST_Class,ST_HP,ST_Level,ST_Res,0x26,0x78,0x543)

  ST_HP:
    //RMenu(ST_Level,0,0,ST_Mov,0x6,0x88,0x544)
    CapRMenu(ST_Level,0,0,ST_Mov,0x6,0x88,0)



  ST_Str:
    //RMenu(PersonalDataRText,ST_Mag,ST_Name,ST_Con,0x66,0x18,0x546)
    CapRMenu(PersonalDataRText,ST_Mag,ST_Name,ST_Con,0x66,0x18,1)

  ST_Mag:
    //RMenu(ST_Str,ST_Skl,ST_Name,ST_Aid,0x66,0x28,0x547)
    CapRMenu(ST_Str,ST_Skl,ST_Name,ST_Aid,0x66,0x28,2)

  ST_Skl:
    //RMenu(ST_Mag,ST_Spd,ST_Name,ST_Cond,0x66,0x38,0x548)
    CapRMenu(ST_Mag,ST_Spd,ST_Name,ST_Cond,0x66,0x38,3)

  ST_Spd:
    //RMenu(ST_Skl,ST_Luck,ST_Name,ST_Affin,0x66,0x48,0x549)
    CapRMenu(ST_Skl,ST_Luck,ST_Name,ST_Affin,0x66,0x48,4)

  ST_Luck:
    //RMenu(ST_Spd,ST_Def,ST_Name,ST_Talk,0x66,0x58,0x54a)
    CapRMenu(ST_Spd,ST_Def,ST_Name,ST_Talk,0x66,0x58,5)

  ST_Def:
    //RMenu(ST_Luck,ST_Res,ST_Class,ST_Skills,0x66,0x68,0x54b)
    CapRMenu(ST_Luck,ST_Res,ST_Class,ST_Skills,0x66,0x68,6)

  ST_Res:
    //RMenu(ST_Def,ST_Mov,ST_Exp,ST_Skill1,0x66,0x78,0x54c)
    CapRMenu(ST_Def,ST_Mov,ST_Exp,ST_Skill1,0x66,0x78,7)

  ST_Mov:
    //RMenu(ST_Res,ST_Con,ST_Exp,ST_Skill1,0x66,0x88,0x54d,MovHPDescGetter)
    CapRMenu(ST_Res,ST_Con,ST_Exp,ST_Skill1,0x66,0x88,8)

  ST_Con:
    //RMenu(PersonalDataRText,ST_Aid,ST_Str,0,0xA6,0x18,0x54e)
    CapRMenu(PersonalDataRText,ST_Aid,ST_Str,0,0xA6,0x18,9)

  ST_Aid:
    RMenu(ST_Con,ST_Cond,ST_Mag,0,0xa6,0x28,0x54F)

  ST_Cond:
    RMenu(ST_Aid,ST_Affin,ST_Skl,0,0xa6,0x38,0x552,ConditionGetter)

  ST_Affin:
    #ifdef LEADERSHIP_STARS
      RMenu(ST_Cond,ST_Talk,ST_Spd,0,0xa6,0x48,LeadRText)
    #else
      //RMenu(ST_Cond,ST_Talk,ST_Spd,0,0xa6,0x48,0x551)
      RMenu(ST_Cond,ST_Talk,ST_Spd,0,0xa6,0x48,0x551,AffinityGetter)
    #endif

  //ST_Cond:
    //RMenu(ST_Affin,ST_Talk,ST_Spd,0,0xA6,0x48,0x552,ConditionGetter)

  ST_Talk:
    RMenu(ST_Affin,ST_Skills,ST_Luck,0,0xA6,0x58,SS_TalkRText)

  ST_Skills:
    RMenu(ST_Talk,ST_Skill1,ST_Def,0,0xA6,0x68,SS_SkillsRText)

  ST_Skill1:
    //RMenu(ST_Skills,ST_Skill4,ST_Res,ST_Skill2,0xa6,0x78,0,RTextLoop,SkillDescGetter)
    RMenu(ST_Skills,ST_Skill4,ST_Res,ST_Skill2,0xa6,0x78,0,RTextLoop,NewSkillDescGetter)

  ST_Skill2:
    //RMenu(ST_Skills,ST_Skill5,ST_Skill1,ST_Skill3,0xbe,0x78,1,RTextLoop,SkillDescGetter+4)
    RMenu(ST_Skills,ST_Skill5,ST_Skill1,ST_Skill3,0xbe,0x78,1,RTextLoop,NewSkillDescGetter)

  ST_Skill3:
    //RMenu(ST_Skills,ST_Skill6,ST_Skill2,0,0xd6,0x78,2,RTextLoop,SkillDescGetter+8)
    RMenu(ST_Skills,ST_Skill6,ST_Skill2,0,0xd6,0x78,2,RTextLoop,NewSkillDescGetter)

  ST_Skill4:
    //RMenu(ST_Skill1,0,ST_Mov,ST_Skill5,0xa6,0x88,3,RTextLoop,SkillDescGetter+12)
    RMenu(ST_Skill1,0,ST_Mov,ST_Skill5,0xa6,0x88,3,RTextLoop,NewSkillDescGetter)

  ST_Skill5:
    //RMenu(ST_Skill2,0,ST_Skill4,ST_Skill6,0xbe,0x88,4,RTextLoop,SkillDescGetter+16)
    RMenu(ST_Skill2,0,ST_Skill4,ST_Skill6,0xbe,0x88,4,RTextLoop,NewSkillDescGetter)

  ST_Skill6:
    //RMenu(ST_Skill3,0,ST_Skill5,0,0xd6,0x88,5,RTextLoop,SkillDescGetter+20)
    RMenu(ST_Skill3,0,ST_Skill5,0,0xd6,0x88,5,RTextLoop,NewSkillDescGetter)

 
  
#endif // USE_STRMAG_SPLIT



/*  === PAGE 2 ===  */


  ALIGN 4
  RText_Page2:


  ST_Inventory1: 
  RMenu(0,ST_Inventory2,ST_Name2,0,0x68,0x18,0,ItemDescLooper,ItemDescGetter)

  ST_Inventory2: 
  RMenu(ST_Inventory1,ST_Inventory3,ST_Name2,0,0x68,0x28,1,ItemDescLooper,ItemDescGetter)

  ST_Inventory3: 
  RMenu(ST_Inventory2,ST_Inventory4,ST_Name2,0,0x68,0x38,2,ItemDescLooper,ItemDescGetter)

  ST_Inventory4: 
  RMenu(ST_Inventory3,ST_Inventory5,ST_Name2,0,0x68,0x48,3,ItemDescLooper,ItemDescGetter)

  ST_Inventory5: 
  RMenu(ST_Inventory4,ST_Atk,ST_Name2,ST_Rng,0x68,0x58,4,ItemDescLooper,ItemDescGetter)

  //If USE_HELP_TEXT_CALC is defined, add Calc in front of RMenu (CalcRMenu) and replace text ids with slot ids (Use order from Calc/Calc.event, with slot Id 0 being first)
  
  ST_Atk: 
  //RMenu(ST_Inventory5,ST_Hit,ST_Exp2,ST_Crit,0x76,0x78,0x55C)
  CalcRMenu(ST_Inventory5,ST_Hit,ST_Exp2,ST_Crit,0x76,0x78,0)

  ST_Hit: 
  //RMenu(ST_Atk,0,ST_HP2,ST_Avo,0x76,0x88,0x55D)
  CalcRMenu(ST_Atk,0,ST_HP2,ST_Avo,0x76,0x88,1)

  ST_Rng: 
  RMenu(ST_Inventory5,ST_Crit,ST_Atk,0,0xAE,0x68,0x55E)

  ST_Crit: 
  //RMenu(ST_Rng,ST_Avo,ST_Atk,0,0xAE,0x78,0x55F)
  CalcRMenu(ST_Rng,ST_Avo,ST_Atk,0,0xAE,0x78,2)

  ST_Avo: 
  //RMenu(ST_Crit,0,ST_Hit,0,0xAE,0x88,0x560)
  CalcRMenu(ST_Crit,0,ST_Hit,0,0xAE,0x88,3)

  
  ST_Name2: 
  RMenu(0,ST_Class2,0,ST_Inventory4,0x18,0x50,0,NameDescGetter)

  ST_Class2: 
  RMenu(ST_Name2,ST_Level2,0,ST_Atk,0x6,0x68,0x6E8,ClassDescGetter)

  ST_Level2: 
  //RMenu(ST_Class2,ST_HP2,0,ST_Exp2,0x6,0x78,0x542)
  CapRMenu(ST_Class2,ST_HP2,0,ST_Exp2,0x6,0x78,10)

  ST_Exp2: 
  RMenu(ST_Class2,ST_HP2,ST_Level2,ST_Atk,0x26,0x78,0x543)

  ST_HP2: 
  //RMenu(ST_Level2,0,0,ST_Hit,0x6,0x88,0x544)
  CapRMenu(ST_Level2,0,0,ST_Hit,0x6,0x88,0)



/*  === PAGE 3 ===  */


  ALIGN 4
  RText_Page3:

//USE_HELP_TEXT_WEAPON_RANK: The process depends on if ONLY_SHOW_USED_RANKS is defined or not. Make sure you're reading the section that's actually used in your MSS setup.

#ifndef ONLY_SHOW_USED_RANKS
  
  //If USE_HELP_TEXT_WEAPON_RANK is defined, replace WRankGetter with NewRankGetter
  
  ST_WRank1:
  //RMenu(0,ST_WRank2,ST_Name3,ST_WRank3,0x68,0x18,0,WRankGetter)
  RMenu(0,ST_WRank2,ST_Name3,ST_WRank3,0x68,0x18,0,NewRankGetter)

  ST_WRank2:
  //RMenu(ST_WRank1,ST_Supports,ST_Name3,ST_WRank4,0x68,0x28,1,WRankGetter)
  RMenu(ST_WRank1,ST_Supports,ST_Name3,ST_WRank4,0x68,0x28,1,NewRankGetter)

  ST_WRank3:
  //RMenu(0,ST_WRank4,ST_WRank1,0,0xA8,0x18,2,WRankGetter)
  RMenu(0,ST_WRank4,ST_WRank1,0,0xA8,0x18,2,NewRankGetter)

  ST_WRank4:
  //RMenu(ST_WRank3,ST_Supports,ST_WRank2,0,0xA8,0x28,3,WRankGetter)
  RMenu(ST_WRank3,ST_Supports,ST_WRank2,0,0xA8,0x28,3,NewRankGetter)

#else // ONLY_SHOW_USED_RANKS

  //If USE_HELP_TEXT_WEAPON_RANK is defined, replace WeaponDescLooper,WeaponDescGetter with CheckIfMoreRanks,NewRankGetter
  
  ST_WRank1:
  //RMenu(0,ST_WRank3,ST_Name3,ST_WRank2,0x68,0x18,0,WeaponDescLooper,WeaponDescGetter)
  RMenu(0,ST_WRank3,ST_Name3,ST_WRank2,0x68,0x18,0,CheckIfMoreRanks,NewRankGetter)

  ST_WRank2:
  //RMenu(0,ST_WRank4,ST_WRank1,0,0xA8,0x18,1,WeaponDescLooper,WeaponDescGetter)
  RMenu(0,ST_WRank4,ST_WRank1,0,0xA8,0x18,1,CheckIfMoreRanks,NewRankGetter)

  ST_WRank3:
  //RMenu(ST_WRank1,ST_Supports,ST_Name3,ST_WRank4,0x68,0x28,2,WeaponDescLooper,WeaponDescGetter)
  RMenu(ST_WRank1,ST_Supports,ST_Name3,ST_WRank4,0x68,0x28,2,CheckIfMoreRanks,NewRankGetter)

  ST_WRank4:
  //RMenu(ST_WRank2,ST_Supports,ST_WRank3,0,0xA8,0x28,3,WeaponDescLooper,WeaponDescGetter)
  RMenu(ST_WRank2,ST_Supports,ST_WRank3,0,0xA8,0x28,3,CheckIfMoreRanks,NewRankGetter)

#endif // ONLY_SHOW_USED_RANKS

  ST_Supports:
  RMenu_Cond(ST_WRank2,ST_Name3,ST_Name3,0,0x80,0x40,0x569,SupportsConditional) 


  ST_Name3:
  RMenu(0,ST_Class3,0,ST_Supports,0x18,0x50,0,NameDescGetter)

  ST_Class3:
  RMenu(ST_Name3,ST_Level3,0,ST_Supports,0x6,0x68,0x6E8,ClassDescGetter)

  ST_Level3:
  //RMenu(ST_Class3,ST_HP3,0,ST_Exp3,0x6,0x78,0x542)
  CapRMenu(ST_Class3,ST_HP3,0,ST_Exp3,0x6,0x78,10)

  ST_Exp3:
  RMenu(ST_Class3,ST_HP3,ST_Level3,ST_Supports,0x26,0x78,0x543)

  ST_HP3:
  //RMenu(ST_Level3,0,0,ST_Supports,0x6,0x88,0x544)
  CapRMenu(ST_Level3,0,0,ST_Supports,0x6,0x88,0)


/*  === PAGE 4 ===  */


#ifdef ENABLE_PERSONAL_INFO

  ALIGN 4
  RText_Page4:
  
  ST_Name4:
    RMenu(0,ST_Class4,0,ST_Dislikes,0x18,0x50,0x0,NameDescGetter)

  ST_Class4:
	#ifdef GAIDEN_MAGIC
	  RMenu(ST_Name4,ST_Level4,0,ST_Spell1,0x6,0x68,0x6E8,ClassDescGetter)
	#else
	  RMenu(ST_Name4,ST_Level4,0,0,0x6,0x68,0x6E8,ClassDescGetter)
	#endif

  ST_Level4:
    //RMenu(ST_Class4,ST_HP4,0,ST_Exp4,0x6,0x78,0x542)
    CapRMenu(ST_Class4,ST_HP4,0,ST_Exp4,0x6,0x78,10)

  ST_Exp4:
	#ifdef GAIDEN_MAGIC
      RMenu(ST_Class4,ST_HP4,ST_Level4,ST_Spell3,0x26,0x78,0x543)
    #else
	  RMenu(ST_Class4,ST_HP4,0,0,0x26,0x78,0x543)
	#endif

  ST_HP4:
	#ifdef GAIDEN_MAGIC
      //RMenu(ST_Level4,0,0,ST_Spell5,0x6,0x88,0x544)
      CapRMenu(ST_Level4,0,0,ST_Spell5,0x6,0x88,0)
	#else
	  //RMenu(ST_Level4,0,0,0,0x6,0x88,0x544)
	  CapRMenu(ST_Level4,0,0,0,0x6,0x88,0)
	#endif

  ST_Likes:
    RMenu(0,ST_Dislikes,ST_Name4,ST_Height,0x66,0x18,LikesDesc)
	
  ST_Dislikes:
    RMenu(ST_Likes,ST_Age,ST_Name4,ST_Height,0x66,0x38,DislikesDesc)
	
  ST_Age:
	#ifdef GAIDEN_MAGIC
	  RMenu(ST_Dislikes,ST_Spell1,ST_Class4,ST_Height,0x66,0x58,AgeDesc)
	#else
	  RMenu(ST_Dislikes,0,ST_Class4,ST_Height,0x66,0x58,AgeDesc)
	#endif
	
  ST_Height:
	#ifdef GAIDEN_MAGIC
      RMenu(ST_Dislikes,ST_Spell2,ST_Age,0,0xa6,0x58,HeightDesc)
    #else
	  RMenu(ST_Dislikes,0,ST_Age,0,0xa6,0x58,HeightDesc)
	#endif

#else // ENABLE_PERSONAL_INFO

  RText_Page4:

  ST_Name4:
    RMenu(0,ST_Class4,0,ST_Donate,0x18,0x50,0x0,NameDescGetter)
    
  ST_Class4:
	#ifdef GAIDEN_MAGIC
	  RMenu(ST_Name4,ST_Level4,0,ST_Spell1,0x6,0x68,0x6E8,ClassDescGetter)
	#else
	  RMenu(ST_Name4,ST_Level4,0,ST_Donate,0x6,0x68,0x6E8,ClassDescGetter)
	#endif

  ST_Level4:
    //RMenu(ST_Class4,ST_HP4,0,ST_Exp4,0x6,0x78,0x542)
    CapRMenu(ST_Class4,ST_HP4,0,ST_Exp4,0x6,0x78,10)

  ST_Exp4:
	#ifdef GAIDEN_MAGIC
      RMenu(ST_Class4,ST_HP4,ST_Level4,ST_Spell3,0x26,0x78,0x543)
    #else
	  RMenu(ST_Class4,ST_HP4,ST_Level4,ST_Donate,0x26,0x78,0x543)
	#endif

  ST_HP4:
	#ifdef GAIDEN_MAGIC
      //RMenu(ST_Level4,0,0,ST_Spell5,0x6,0x88,0x544)
      CapRMenu(ST_Level4,0,0,ST_Spell5,0x6,0x88,0)
	#else
	  //RMenu(ST_Level4,0,0,ST_Donate,0x6,0x88,0x544)
	  CapRMenu(ST_Level4,0,0,ST_Donate,0x6,0x88,0)
	#endif
    
  ST_Donate:
	#ifdef GAIDEN_MAGIC
      RMenu(0,ST_Spell1,ST_Name4,0,0x86,0x48,DonateURL)
	#else
	  RMenu(0,0,ST_Name4,0,0x86,0x48,DonateURL)
	#endif
	
#endif // ENABLE_PERSONAL_INFO

#ifdef GAIDEN_MAGIC
  #ifdef ENABLE_PERSONAL_INFO
    ST_Spell1:
      RMenu(ST_Age,ST_Spell3,ST_Class4,ST_Spell2,0x66,0x68,0,GaidenRTextLooper,GaidenRTextGetter)
    ST_Spell2:
      RMenu(ST_Height,ST_Spell4,ST_Spell1,0,0xA6,0x68,1,GaidenRTextLooper,GaidenRTextGetter)
  #else
    ST_Spell1:
      RMenu(0,ST_Spell3,ST_Class4,ST_Spell2,0x66,0x68,0,GaidenRTextLooper,GaidenRTextGetter)
    ST_Spell2:
      RMenu(0,ST_Spell4,ST_Spell1,0,0xA6,0x68,1,GaidenRTextLooper,GaidenRTextGetter)
  #endif // ENABLE_PERSONAL_INFO
  ST_Spell3:
    RMenu(ST_Spell1,ST_Spell5,ST_Exp4,ST_Spell4,0x66,0x78,2,GaidenRTextLooper,GaidenRTextGetter)
  ST_Spell4:
    RMenu(ST_Spell2,ST_Spell6,ST_Spell3,0,0xA6,0x78,3,GaidenRTextLooper,GaidenRTextGetter)
  ST_Spell5:
    RMenu(ST_Spell3,0,ST_HP4,ST_Spell6,0x66,0x88,4,GaidenRTextLooper,GaidenRTextGetter)
  ST_Spell6:
    RMenu(ST_Spell4,0,ST_Spell5,0,0xA6,0x88,5,GaidenRTextLooper,GaidenRTextGetter)
	
#endif // GAIDEN_MAGIC
