#define LoadUnitsByDifficulty(easy,normal,hard) "ASMC DifficultySetterByOptionBitASMC|1; CHECK_TUTORIAL ; BNE 4034 rC r0 ; CHECK_HARD ; BNE 4035 rC r0 ; LOAD1 0x1 normal ; GOTO 4036 ; LABEL 4034 ; LOAD1 0x1 easy ; GOTO 4036 ; LABEL 4035 ; LOAD1 0x1 hard ; LABEL 4036 ; ENUN;"
#define LoadUnitsByDifficulty2(easy,normal,hard) "CHECK_TUTORIAL ; BNE 4064 rC r0 ; CHECK_HARD ; BNE 4065 rC r0 ; LOAD1 0x1 normal ; GOTO 4066 ; LABEL 4064 ; LOAD1 0x1 easy ; GOTO 4066 ; LABEL 4065 ; LOAD1 0x1 hard ; LABEL 4066 ; ENUN;"
#define SystemText(textid) "CenterTutorialTextBox; TUTORIALTEXTBOXSTART; TEXTSHOW textid; TEXTEND; REMA"
#define SystemText(bgid,textid) "CenterTutorialTextBox; SetBackground(bgid); TUTORIALTEXTBOXSTART; TEXTSHOW textid; TEXTEND; FADI 16"
#define CGText(textid) "CGTEXTSTART; TEXTSHOW textid; TEXTEND"
#define NarrationText(textid) "SVAL 0xB 0x00B4FFFF; TUTORIALTEXTBOXSTART; TEXTSHOW textid; TEXTEND;"
#define EndEvent "EVBIT_T 0x7; ENDA"
#define CleanTextNoMap(bgid,textid) "SetBackground(bgid); TEXTSTART; TEXTSHOW textid; TEXTEND; FADI 16"
#define CleanText(bgid,textid) "SetBackground(bgid); TEXTSTART; TEXTSHOW textid; TEXTEND; ClearBackgroundSmooth"
#define GiveItem(item) "SMOV 0x3 item; GIVEITEMTO 0xFFFF;"
#define GiveItem(item,character) "SMOV 0x3 item; GIVEITEMTO character;"
#define Narration(bgid,textid) "EVBIT_T 8; SetBackground(bgid); STAL 120; NarrationText(textid); MUSC 0x0; FADI 16"
#define CamOn "EVBIT_T 9"
#define CamOff "EVBIT_F 9"
#define StartGameOver "ASMC 0x800D391" // Game over ASMC 
#define RefreshSMS "ASMC 0x8026689" //see how this looks when loading stuff
#define Reinforcements(pointer) "CamOn ; LOAD1 0x0 pointer; ENUN; RefreshSMS; CamOff"
#define HardReinforcements(pointer) "CHECK_HARD ; BNE 6789 rC r0 ; Reinforcements(pointer); LABEL 6789"
#define DifficultyReinforcements(easy,normal,hard) "CHECK_TUTORIAL ; BNE 4034 rC r0 ; CHECK_HARD ; BNE 4035 rC r0 ; Reinforcements(normal) ; GOTO 4036 ; LABEL 4034 ; Reinforcements(easy) ; GOTO 4036 ; LABEL 4035 ; Reinforcements(hard) ; LABEL 4036 ; ENUN;"
#define DifficultyReinforcements2(easy,normal,hard) "CHECK_TUTORIAL ; BNE 4064 rC r0 ; CHECK_HARD ; BNE 4065 rC r0 ; Reinforcements(normal) ; GOTO 4066 ; LABEL 4064 ; Reinforcements(easy) ; GOTO 4066 ; LABEL 4065 ; Reinforcements(hard) ; LABEL 4066 ; ENUN;"
#define RemoveUnit(unit,labelid) "CHECK_ALIVE unit; BEQ labelid 0xc 0x0; REMU unit; LABEL labelid"
#define UnremoveUnit(unit,labelid) "CHECK_ALIVE unit; BEQ labelid 0xc 0x0; REVEAL unit; LABEL labelid"
#define RemoveUnit(unit) "CHECK_EXISTS unit; BEQ unit 0xc 0x0; REMU unit; LABEL unit"
#define UnremoveUnit(unit) "CHECK_EXISTS unit; BEQ unit 0xc 0x0; REVEAL unit; LABEL unit"
#define KillUnitIfPlayerAlive(player,unit) "CHECK_ALIVE player; BEQ unit 0xc 0x0; CHECK_ALIVE unit; BEQ unit 0xc 0x0; DISA_IF unit; DISA unit; LABEL unit"
#define TurnAllyIfAlive(unit) "CHECK_ALIVE unit; BEQ unit 0xc 0x0; TurnAlly(unit); LABEL unit"
#define SilentKillUnit(unit) "DISA_IF unit; DISA unit"
#define SFXKillUnit(unit) "SET_SOMETHING unit; DISA unit"
#define DisaIfDead(unit) "CHECK_ALIVE unit; BNE unit 0xc 0x0; DISA unit; LABEL unit"
#define RandomRainSetter "RANDOMNUMBER 9; BNE 0x4368 0xc 0x0; WEATHER 0x4; LABEL 0x4368"

#define AnimusSealGiver(unitid) "CHECK_EVENTID AnimusModeFlag; BEQ 0x2789 0xc 0x0; CHECK_EVENTID AnimusSealGivenFlag; BNE 0x2789 0xc 0x0; REMA; SetBackground(BlankCG);GiveItem(AnimusSeal,unitid); ENUT AnimusSealGivenFlag;LABEL 0x2789"

#define SetUnitSkills(unit,skillid1,skillid2,skillid3,skillid4) "Write_Byte(skillid1,0x203E884+(unit*0x10)+0x1);Write_Byte(skillid2,0x203E884+(unit*0x10)+0x2);Write_Byte(skillid3,0x203E884+(unit*0x10)+0x3);Write_Byte(skillid4,0x203E884+(unit*0x10)+0x4)"

#define EndgameQuote(unit,text) "CHECK_DEPLOYED unit; BEQ unit 0xc 0x0; Text(text); LABEL unit"

#define RefreshDurabilityItems "SVAL 1 0; ASMC RefreshItemsASMC|1"

#define Location(textid) "BROWNBOXTEXT textid [8,8]"
#define LocationText(bgid,textid,labelid) "SetBackground(bgid); Location(labelid) ; TEXTSTART; TEXTSHOW textid; TEXTEND; FADI 16"
#define LocationText(bgid,textid,labelid,musicid) "MUSC 0x0; SetBackground(bgid); Location(labelid) ; MUSC musicid; TEXTSTART; TEXTSHOW textid; TEXTEND; FADI 16"

#define AreaEvent(eventID,EventPointer,corner1x,corner1y,corner2x,corner2y)   "AREA eventID EventPointer [corner1x,corner1y] [corner2x,corner2y]" 

#define ResetBaseFlags "ENUT 0x3; ENUF AnimusSealGivenFlag; ENUF BaseFlag1;ENUF BaseFlag2;ENUF BaseFlag3;ENUF BaseFlag4;ENUF BaseFlag5;ENUF BaseFlag6;ENUF BaseFlag7;ENUF BaseFlag8; ENUF TensionFlag; ENUF HeatFlag1; ENUF HeatFlag2; ENUF HeatFlag3; ENUF HeatFlag4; ENUF ReadyAimFlag; ENUF HolyMantleFlag; ENUF ArdentMarchFlag"

#define DesertItem(itemid,flag) "CHECK_ALLEGIANCE 0xFFFF; BNE 0x1 0xC 0x0; GiveItem(itemid); GOTO 0x2; LABEL 0x1; ENUF flag; LABEL 0x2; EndEvent"
#define DesertScroll(skillid,flag) "CHECK_ALLEGIANCE 0xFFFF; BNE 0x1 0xC 0x0; GiveItemWithDurability(SkillScroll,skillid,0xFFFF); GOTO 0x2; LABEL 0x1; ENUF flag; LABEL 0x2; EndEvent"

#define DeathBranchText(char1,char2,deadmus,alivemus,background,bothalive,char1dead,char2dead,bothdead) "CHECK_ALIVE char1; BNE 0x2 0xC 0x0; CHECK_ALIVE char2; BNE 0x3 0xC 0x0; MUSC deadmus; CleanTextNoMap(background,bothdead); GOTO 0x5; LABEL 0x3; MUSC deadmus; CleanTextNoMap(background,char1dead); GOTO 0x5; LABEL 0x2; CHECK_ALIVE char2; BNE 0x4 0xC 0x0; MUSC deadmus; CleanTextNoMap(background,char2dead); GOTO 0x5; LABEL 0x4; MUSC alivemus; CleanTextNoMap(background,bothalive); LABEL 0x5"
#define PreChoiceToggle "EVBIT_MODIFY 4"
#define PostChoiceToggle "EVBIT_F 5; EVBIT_F 4; EVBIT_F 3; EVBIT_F 2; EVBIT_F 1; EVBIT_F 0"
#define GotoPrepScreen "AnimusSealGiver(Blair); RefreshDurabilityItems; LABEL 0x6500; CALL $591FD8; ASMC ASMCCheckBaseConvo|1; BEQ 0x6501 0xc 0x0; FADU 16; PreChoiceToggle; SystemText(BaseConvoConfirm); PostChoiceToggle; IfNoSelectedGoto(0x6500); LABEL 0x6501; EndEvent"
#define GotoPrepScreenViridian "AnimusSealGiver(Viridian); RefreshDurabilityItems; LABEL 0x6500; CALL $591FD8; ASMC ASMCCheckBaseConvo|1; BEQ 0x6501 0xc 0x0; FADU 16; PreChoiceToggle; SystemText(BaseConvoConfirm); PostChoiceToggle; IfNoSelectedGoto(0x6500); LABEL 0x6501; EndEvent"

#define GotoPrepScreenNoBaseCheck "AnimusSealGiver(Blair); RefreshDurabilityItems; ASMC DifficultySetterByOptionBitASMC|1; CALL $591FD8; EndEvent"
#define GotoPrepScreenNoBaseCheckViridian "AnimusSealGiver(Viridian); RefreshDurabilityItems; ASMC DifficultySetterByOptionBitASMC|1; CALL $591FD8; EndEvent"

#define HoratioMusicChooser "CHECK_EVENTID HoratioMusicFlag; BNE 0x666 0xc 0x0; MUSC S_Ameno; GOTO 0x667; LABEL 0x666; MUSC S_HisWorld; LABEL 0x667"

#define LearnSkill(charID,skillID) "SVAL 1 skillID; SVAL 2 charID; ASMC ASMC_LearnNewSkill|1"
#define CurrentUnitLearnSkill(skillID) "SVAL 1 skillID; SVAL 2 (-1); ASMC ASMC_LearnNewSkill|1"
#define CurrentUnitForgetSkill(skillID) "SVAL 1 skillID; SVAL 2 (-1); ASMC ASMC_ForgetSkill|1"

#define RemoveItem(unit,item) "SVAL 1 unit; BYTE 0x40 0x0D ; SHORT item ; POIN TakeUnitOneItem|1"
#define TakeItemAll(ITEM) "BYTE 0x40 0x0D ; SHORT ITEM ; POIN TakeItemAll|1"

#define Interlude10GlobalFlagOff "ENUF BaseFlag1;ENUF BaseFlag2;ENUF BaseFlag3;ENUF BaseFlag4;ENUF BaseFlag5;ENUF BaseFlag6;ENUF BaseFlag7;ENUF BaseFlag8; ENUF GuideChpt1; ENUF GuideChpt2; ENUF GuideChpt3; ENUF GuideChpt4; ENUF GuideChpt5; ENUF GuideChpt6; ENUF GuideChpt7; ENUF GuideChpt8; ENUF GuideChpt9; ENUF GuideChpt10; ENUF GuideChpt11; ENUF GuideChpt12; ENUF GuideChpt13; ENUF GuideChpt14; ENUF GuideChpt15; ENUF GuideChpt16; ENUF GuideChpt17; ENUF GuideChpt18; ENUF GuideChpt19; ENUF GuideChpt20; ENUF GuideChpt21; ENUF GuideChpt22"
#define Interlude10GlobalFlagOn "ResetBaseFlags; ENUT GuideChpt1; ENUT GuideChpt2; ENUT GuideChpt3; ENUT GuideChpt4; ENUT GuideChpt5; ENUT GuideChpt6; ENUT GuideChpt7; ENUT GuideChpt8; ENUT GuideChpt9; ENUT GuideChpt10; ENUT GuideChpt11; ENUT GuideChpt12; ENUT GuideChpt13; ENUT GuideChpt14; ENUT GuideChpt15; ENUT GuideChpt16; ENUT GuideChpt17; ENUT GuideChpt18; ENUT GuideChpt19; ENUT GuideChpt20; ENUT GuideChpt21; ENUT GuideChpt22"
//DeathBranchText(char1,char2,deadmus,alivemus,background,bothalive,char1dead,char2dead,bothdead) i'm sorry
//SupportFlagOn(unit1,unit2,flag,supportrank)
//SupportBranch(unit1,unit2,supportrank,condid)
#define KillEveryLastOneOfThem "DISA 0x1; DISA 0x2;DISA 0x3;DISA 0x4;DISA 0x5;DISA 0x6;DISA 0x7;DISA 0x8;DISA 0x9;DISA 0xa;DISA 0xb;DISA 0xc;DISA 0xd;DISA 0xe;DISA 0xf;DISA 0x10;DISA 0x11;DISA 0x12;DISA 0x13;DISA 0x14;DISA 0x15;DISA 0x16;DISA 0x17;DISA 0x18;DISA 0x19;DISA 0x1a;DISA 0x1b;DISA 0x1c;DISA 0x1d;DISA 0x1e;DISA 0x1f;DISA 0x20;DISA 0x21;DISA 0x22;DISA 0x23;DISA 0x24;DISA 0x25;DISA 0x26;DISA 0x27;DISA 0x28;DISA 0x29;DISA 0x2a;DISA 0x2b;DISA 0x2c;DISA 0x2d;DISA 0x2e;DISA 0x2f;DISA 0x30;DISA 0x31;DISA 0x32;DISA 0x33;DISA 0x34;DISA 0x35;DISA 0x36;DISA 0x37;DISA 0x38;DISA 0x39;DISA 0x3a;DISA 0x3b;DISA 0x3c;DISA 0x3d;DISA 0x3e;DISA 0x3f;DISA 0x40;DISA 0x41;DISA 0x42;DISA 0x43;DISA 0x44;DISA 0x45"