#include "Extensions/6CDefinitions.txt"

ALIGN 4 
StealInvFull: 
#incbin "StealInvFull.dmp" 
POIN StealFixProc 

ALIGN 4 
StealRestoreItems: 
#incbin "StealRestoreItems.dmp" 

PUSH
ORG $32506
SHORT $46c0 $46c0 // don't give the item early 

ORG $9a3618 //from "MapAnimSteal" at 0x9A32C8 proc 
_6C_CALL_ROUTINE(StealInvFull|1)


ORG $9a3608 
_6C_JUMP(0x9A3618)


ORG $241CA 
SHORT $2807 // allow steal while full inv 
POP 


ALIGN 4 
StealFixProc:	//HINT=PROCS
_6C_SLEEP(0)
_6C_SET_NAME(StealProcName)
_6C_SLEEP(0)
PROC_WHILE_EXISTS(0x89A32C8) // MapAnimSteal
_6C_CALL_ROUTINE(StealRestoreItems|1) 
_6C_END 

StealProcName:
String("Steal copy inv to attacker") ; BYTE 0
ALIGN 4

//adding this here too since stealing
// Clear text tiles when starting steal targeting routine.
// Makes it less likely for text to overlap with portrait gfx.

PUSH
  ORG 0x24220
    jumpToHack(fixStealGfx)
POP

ALIGN 4; fixStealGfx:
SHORT 0x4B06            // ldr  r3, =Text_ResetTileAllocation
SHORT 0xF000 0xF809     // bl   GOTO_R3
SHORT 0x1C20            // mov  r0, r4
SHORT 0x4B05            // ldr  r3, =NewUnitInfoWindow_WithAllLines
SHORT 0xF000 0xF805     // bl   GOTO_R3
SHORT 0x4805            // ldr  r0, =0x86D
SHORT 0x4B05            // ldr  r3, =String_GetFromIndex
SHORT 0xF000 0xF801     // bl   GOTO_R3
SHORT 0x4B05            // ldr  r3, =0x802422B
                        // GOTO_R3:
SHORT 0x4718            // bx   r3
SHORT 0x0
POIN 0x3D21             // Text_ResetTileAllocation
POIN 0x34C19            // NewUnitInfoWindow_WithAllLines
SHORT 0x86D 0x0         // 0x86D
POIN 0xA241             // String_Get_fromIndex
POIN 0x2422B            // Return address.



