
//Text ids do not need [A] to go to the next text id; that functionality is controlled by the lists below

//Note: The press "A" button functionality during stat screen is granted by StatScreen_HelpBoxIdle

//For each "thing" that can have multiple pages of help text, we need a routine/method to verify if we're checking that thing (if items can have multiple pages, how can we prove we're currently checking an item and not something else?) and a routine for seeing if said thing does have multiple pages (if items can have multiple pages, does this particular item have multiple pages?) 

MultiplePagesAllowlist:

	//Keep entry ids in sequential order (refer to HelpTextIdTable in HelpText.event)

	//POIN linkInHelpTextIdTable
	//POIN routineToCheckForMultiplePages (WORD 0 for automatic success)
	
	#ifdef USE_HELP_TEXT_SKILL
		POIN SkillHelpTextLink
		POIN DoesSkillHaveMultiplePages
	#endif
	
	POIN MultiplePageHelpTextLink
	WORD 0
	
	#ifdef LINK_CHAR_DESC_WITH_PROMO
		POIN CharacterHelpTextLink
		POIN DoesCharHaveMultiplePages
		
		POIN VanillaCharacterHelpTextLink
		POIN DoesCharHaveMultiplePages
	#endif
	
	#ifdef KEEP_VANILLA_CHAR_AND_LINK_WITH_PROMO
		POIN VanillaCharacterHelpTextLink
		POIN DoesCharHaveMultiplePages
	#endif
	
	#ifdef LINK_CLASS_DESC_WITH_PROMO
		POIN ClassHelpTextLink
		POIN DoesCharHaveMultiplePages
	#endif
	
	#ifdef USE_HELP_TEXT_PROMO
		POIN PromotionHelpTextLink
		WORD 0
	#endif

	//end of the list (once this point is reached in CanCurrentHelpTextHaveMultiplePages, Skills and Items are checked for)
	WORD 0 

MultipleHelpTextPageList_Items:
//BYTE itemId numberOfPages
//SHORT textId1 textId2 ...

BYTE Warp 2
SHORT DWarp DWarp2

BYTE Rescue 2
SHORT DRescue DRescue2

BYTE Yoink 2
SHORT DYoink DRescue2

BYTE Aspect 2
SHORT DAspect DAspect2

BYTE Awaken 2
SHORT DAwaken DAwaken2

BYTE LuxAurumque 2
SHORT DLux DLightRuneEffect
BYTE Runeward 2
SHORT DLightRune DLightRuneEffect

BYTE NoxAurumque 2
SHORT DNox DMineEffect
BYTE Implant 2
SHORT DMine DMineEffect

BYTE Sleep 2
SHORT DSleep DSleep2
BYTE Silence 2
SHORT DSilence DSilence2
BYTE Arbitrate 2
SHORT DArbitrate DSilence2
BYTE Berserk 2
SHORT DBerserk DBerserk2

BYTE DevilAxe 2
SHORT DDevilAxe DDevilAxe2

BYTE Kagutsuchi 2
SHORT DPressTurn DPressTurn2
BYTE Nuboko 2
SHORT DPressTurn DPressTurn2
BYTE Ukonvasara 2
SHORT DPressTurn DPressTurn2
BYTE JavelinRain 2
SHORT DPressTurn DPressTurn2
BYTE Trisagion 2
SHORT DPressTurn DPressTurn2
BYTE Freikugel 2
SHORT DPressTurn DPressTurn2

BYTE Salvation 2
SHORT DSalvation DSalvation2

BYTE Mazandyne 2
SHORT DMazandyne DMazandyne2

BYTE WrathStaff 2
SHORT DWrathStaff DWrathStaff2

BYTE TheSDarkTome 3
SHORT DSDark DSDark2 DSDark3

BYTE 0 //end list with this
ALIGN 4

//#ifdef USE_HELP_TEXT_CHAR_AND_PROMO
#ifdef USE_HELP_TEXT_PROMO

	MultipleHelpTextPageList_Chars:
	
	/*
	BYTE charId numberOfPromotions
	SHORT classId textIdOfBenefits
	SHORT classId2 textIdOfBenefits2
	...
	*/
	
	BYTE Eirika 1
	SHORT EirikaMasterLord EirikaMasterLordBenefits
	
	BYTE Ephraim 1
	SHORT EphraimMasterLord EphraimMasterLordBenefits
	
	BYTE Ross 7
	SHORT Fighter FighterBenefits
	SHORT Pirate PirateBenefits
	SHORT Journeyman_2 Journeyman2Benefits
	SHORT Hero HeroBenefits
	SHORT Warrior WarriorBenefits
	SHORT Berserker BerserkerBenefits
	SHORT Journeyman_3 Journeyman3Benefits
	
	BYTE 0 //end list with this
	ALIGN 4
	
	NextPromotionDisplayExclusionList:
	POIN PromoExcludeLowerClassTier
	POIN PromoExcludeSameClassTier
	POIN PromoExcludeDifferentBranchUnlessTier0
	WORD 0
	
	ClassTierListMaster:
	//arrange from strongest tier to weakest
	POIN ClassTier2List
	POIN ClassTier1List
	//POIN ClassTier0List //not needed for this
	WORD 0
	
	ClassTier0List:
	BYTE Journeyman_1 Pupil_1 Recruit_1
	BYTE 0
	
	ClassTier1List:
	BYTE EphraimLord EirikaLord Cavalier Cavalier_F Knight Knight_F Thief Mercenary Mercenary_F Myrmidon Myrmidon_F Archer Archer_F WyvernRider WyvernRider_F Mage Mage_F Shaman Shaman_F Recruit_2 Fighter Brigand Pirate Monk Priest PegasusKnight Cleric Troubadour Soldier Journeyman_2 Pupil_2
	BYTE 0
	
	ClassTier2List:
	BYTE EphraimMasterLord EirikaMasterLord Paladin Paladin_F General General_F Hero Hero_F Swordmaster Swordmaster_F Assassin Assassin_F Sniper Sniper_F Ranger Ranger_F WyvernLord WyvernLord_F WyvernKnight WyvernKnight_F Sage Sage_F MageKnight MageKnight_F Bishop Bishop_F Druid Druid_F Summoner Summoner_F Rogue GreatKnight GreatKnight_F Journeyman_3 Pupil_3 Recruit_3 Warrior Berserker FalcoKnight Valkyrie
	BYTE 0
	
	ALIGN 4
	
#endif

#ifdef USE_HELP_TEXT_SKILL
	MultipleHelpTextPageList_Skills:
	//BYTE skillId numberOfPages
	//SHORT textId1 textId2 ...
	
	
	BYTE RoboKyID 2
	SHORT SD_RightfulGod SD_RightfulGod2
	
	BYTE 0 //end list with this
	ALIGN 4
#endif



//-------------------------------------------
//WIZARD CHECKPOINT
//Do not touch anything below unless you know what you're doing
//-------------------------------------------



#ifndef callHackNew 
	#define callHackNew(offset) 		"BYTE $01 $4B $9E $46 $00 $F8 $01 $E0; POIN (offset|0x1); PROTECT CURRENTOFFSET-12 CURRENTOFFSET-1"
#endif 


PUSH

ORG 0x89178
jumpToHack(StartHelpTextBubble_Extension)
PROTECT 0x89178 CURRENTOFFSET-1

ORG 0x88A00
jumpToHack(StatScreen_HelpBoxCurrentItem)
PROTECT 0x88A00 CURRENTOFFSET-1

ORG 0x88D06
SHORT 0x1C21 //mov r1, r4
PROTECT 0x88D06 CURRENTOFFSET-1
callHackNew(HelpBoxOnOpenHook)

POP


#include "asm/StartHelpTextBubble_Extension.lyn.event"
ALIGN 4

#include "asm/CanCurrentHelpTextHaveMultiplePages.lyn.event"
ALIGN 4

#include "asm/GetMultipleHelpTextEntry.lyn.event"
ALIGN 4

#include "asm/HelpBoxOnOpenHook.lyn.event"
ALIGN 4

#include "asm/FlashIcon.lyn.event"
ALIGN 4

#include "asm/HelpTextNonStatScreenCheckButton_A.lyn.event"
ALIGN 4

HelpBoxFlashIconProc: 
PROC_YIELD // Buffer.
PROC_SET_NAME(HelpBoxFlashIconName)
PROC_LABEL(0) 
PROC_SLEEP(0)
PROC_CALL_ROUTINE(HelpBoxFlashIcon)
PROC_LABEL(1) 
PROC_END
ALIGN 4 

HelpBoxFlashIconName:
String("HelpTextFlashIcon")
BYTE 0
ALIGN 4

HelpTextNonStatScreenMultiplePageProc: 
PROC_YIELD // Buffer.
PROC_SET_NAME(HelpTextNonStatScreenMultiplePageName)
PROC_LABEL(0) 
PROC_SLEEP(0)
PROC_CALL_ROUTINE(HelpTextNonStatScreenCheckButton_A)
PROC_LABEL(1) 
PROC_END
ALIGN 4 

HelpTextNonStatScreenMultiplePageName:
String("HelpTextNonStatScreenMultiplePage")
BYTE 0
ALIGN 4


//---------------------------
//Items
//---------------------------

	PUSH

	ORG 0x88E94
	POIN HelpTextGetItemDesc

	POP

	#include "asmItems/NextPageOfTextForItemDesc.lyn.event"
	ALIGN 4

	#include "asmItems/HelpTextGetItemDesc.lyn.event"
	ALIGN 4

	#include "asmItems/StatScreen_HelpBoxCurrentItem.lyn.event"
	ALIGN 4

	#include "asmItems/StatScreen_DoesItemHaveMultiplePages.lyn.event"
	ALIGN 4


//---------------------------
//Character/Promotion
//---------------------------

#ifdef USE_HELP_TEXT_PROMO
	
	#include "asmCharAndPromo/NextPromotionDisplay.lyn.event"
	ALIGN 4
	
	#include "asmCharAndPromo/PromoExclusions.lyn.event"
	ALIGN 4
	
	#include "asmCharAndPromo/GetMultipleHelpTextCharEntry.lyn.event"
	ALIGN 4

	#include "asmCharAndPromo/HelpBoxCurrentCharInfo.lyn.event"
	ALIGN 4

	#include "asmCharAndPromo/NextPageOfTextForCharInfo.lyn.event"
	ALIGN 4

	#include "asmCharAndPromo/DoesCharHaveMultiplePages.lyn.event"
	ALIGN 4
	
	#ifdef LINK_CLASS_DESC_WITH_PROMO
	
		PUSH
		ORG 0x88C00
		jumpToHack(HelpBoxCurrentClassInfo)
		PROTECT 0x88C00 CURRENTOFFSET-1
		POP
		
		#include "asmCharAndPromo/HelpBoxCurrentClassInfo.lyn.event"
		ALIGN 4
		
		#include "asmCharAndPromo/NewClassDescGetter.lyn.event"
		ALIGN 4
		
	#endif //LINK_CLASS_DESC_WITH_PROMO

#endif //USE_HELP_TEXT_CHAR_AND_PROMO


//---------------------------
//Skills
//---------------------------

#ifdef USE_HELP_TEXT_SKILL

	#include "asmSkills/NewSkillDescGetter.lyn.event"
	ALIGN 4

	#include "asmSkills/NextPageOfTextForSkill.lyn.event"
	ALIGN 4

	#include "asmSkills/DoesSkillHaveMultiplePages.lyn.event"
	ALIGN 4

#endif //USE_HELP_TEXT_SKILL

